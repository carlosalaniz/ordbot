import { PrismaClient } from "@prisma/client"

require('dotenv').config()
export default {
    INSCRIPTION_QUEUE_ITEM_EXPIRY_SECONDS: +process.env.INSCRIPTION_QUEUE_ITEM_EXPIRY_SECONDS,

    // payment confirmation worker variables 
    PAYMENT_CONFIRMATION_WORKER_INTERVAL_MS: +process.env.PAYMENT_CONFIRMATION_WORKER_INTERVAL_MS,
    PAYMENT_CONFIRMATION_WORKER_MAX_RECORDS: +process.env.PAYMENT_CONFIRMATION_WORKER_MAX_RECORDS,

    // Inscribe worker variables 
    INSCRIBE_WORKER_INTERVAL_MS: +process.env.INSCRIBE_WORKER_INTERVAL_MS,
    INSCRIBE_WORKER_INSCRIPTIONS_MAX: +process.env.INSCRIBE_WORKER_INSCRIPTIONS_MAX,

    // InscribeStateConfirmationWorker variables
    INSCRIBE_STATE_CONFIRMATION_INTERVAL_MS: +process.env.INSCRIBE_STATE_CONFIRMATION_INTERVAL_MS,
    INSCRIBE_STATE_CONFIRMATION_MAX_RECORDS: +process.env.INSCRIBE_STATE_CONFIRMATION_MAX_RECORDS,

    // SendInscriptionWorker variables
    SEND_INSCRIPTION_WORKER_INTERVAL_MS: +process.env.SEND_INSCRIPTION_WORKER_INTERVAL_MS,
    SEND_INSCRIPTION_WORKER_INSCRIPTIONS_MAX: +process.env.SEND_INSCRIPTION_WORKER_INSCRIPTIONS_MAX,

    // Ord tools
    ORD_TOOLS_WALLET_STORAGE_FULLPATH: process.env.ORD_TOOLS_WALLET_STORAGE_FULLPATH,
    ORD_WALLET_NAME_REGEX_VERIFY: process.env.ORD_WALLET_NAME_REGEX_VERIFY,

    INSCRIPTIONS_IMAGE_FOLDER: process.env.INSCRIPTIONS_IMAGE_FOLDER,

    // cost variables
    INSCRIPTION_FEE_MULTIPLIER: process.env.INSCRIPTION_FEE_MULTIPLIER,
    SERVICE_FEE_SATS: +process.env.SERVICE_FEE_SATS,
    prismaClient: new PrismaClient()
}




    // TXN